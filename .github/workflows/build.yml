name: Build

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

jobs:
  build-website:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install packages
        working-directory: website
        run: npm install
      - name: Build website
        working-directory: website
        run: npm run build
      - name: Upload website dist
        uses: actions/upload-artifact@v1
        with:
          name: website-dist
          path: website/build

  build-server:
    needs: build-website
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Download website dist
        uses: actions/download-artifact@v1
        with:
          name: website-dist
      - name: Copy website dist
        run: |
          mkdir server-local-cli/src/main/resources/website
          cp -a website-dist/** server-local-cli/src/main/resources/website
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
  
  build-docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission to build scripts
        run: |
          chmod +x docker/base-image/variables.sh
          chmod +x docker/base-image/build.sh 
      - name: Build base image
        run: docker/base-image/build.sh
  
  
  publish-docker-snaphost:
    needs: publish-snapshot
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission to build scripts
        run: |
          chmod +x docker/base-image/variables.sh
          chmod +x docker/base-image/build.sh 
          chmod +x docker/base-image/publish.sh
      - name: Build base image
        run: docker/base-image/build.sh
      - name: Publish base image
        run: docker/base-image/publish.sh
        env:
          DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD }}

  publish-docker-release:
    needs: publish-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission to build scripts
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          chmod +x docker/base-image/variables.sh
          chmod +x docker/base-image/release.sh
      - name: Release base image
        run: docker/base-image/release.sh
        env:
          DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD }}

  publish-snapshot:
    needs: build-server
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Download website dist
        uses: actions/download-artifact@v1
        with:
          name: website-dist
      - name: Copy website dist
        run: |
          mkdir server-local-cli/src/main/resources/website
          cp -a website-dist/** server-local-cli/src/main/resources/website
      - name: Publish with Gradle
        run: ./gradlew publish
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.PASSPHRASE }}
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Publish with dstack
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
          pip install requests
          pip install tqdm
          pip install deprecation
          pip install dstack
          dstack config add --user dstack --token ${{ secrets.DSTACK_TOKEN_STGN }} --server https://api.stgn.dstack.ai
          VERSION=$(./gradlew properties -no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')
          NUM_VERSION=$(echo $VERSION | awk '{p=index($1,"-");printf substr($1,0,p-1)}')
          python -c "from dstack import push_frame; from dstack.cli.installer import Installer; from pathlib import Path; print(push_frame(Installer._STACK, Path('server-local-cli/build/libs/server-local-cli-$VERSION.jar'), version='$NUM_VERSION', jdk_version='8', jdk_compatible_versions='1.8.0_.*'))"

  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  publish-release:
    needs: build-server
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Download website dist
        uses: actions/download-artifact@v1
        with:
          name: website-dist
      - name: Copy website dist
        run: |
          mkdir server-local-cli/src/main/resources/website
          cp -a website-dist/** server-local-cli/src/main/resources/website
      - name: Publish with Gradle
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          ./gradlew -Pdstack_version=$VERSION clean publish -Dorg.gradle.internal.http.socketTimeout=120000 -Dorg.gradle.internal.http.connectionTimeout=120000
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.PASSPHRASE }}
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Publish with dstack
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
          pip install requests
          pip install tqdm
          pip install deprecation
          pip install dstack
          dstack config add --user dstack --token ${{ secrets.DSTACK_TOKEN_PROD }}
          VERSION=${GITHUB_REF#refs/tags/v}
          python -c "from dstack import push_frame; from dstack.cli.installer import Installer; from pathlib import Path; print(push_frame(Installer._STACK, Path('server-local-cli/build/libs/server-local-cli-$VERSION.jar'), version='$VERSION', jdk_version='8', jdk_compatible_versions='1.8.0_.*'))"