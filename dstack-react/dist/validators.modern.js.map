{"version":3,"file":"validators.modern.js","sources":["../src/validations/index.js"],"sourcesContent":["export const isValidUserName = userName => {\n    const errors = {\n        notAllowedCharacters: 'notAllowedCharacters',\n        tooShort: 'tooShort',\n        tooLong: 'tooLong',\n    };\n\n    const testRegexp = /^[a-zA-Z0-9-_]+$/;\n\n    if (userName.length < 3)\n        return {\n            isValid: false,\n            error: errors.tooShort,\n        };\n\n    if (userName.length > 24)\n        return {\n            isValid: false,\n            error: errors.tooLong,\n        };\n\n    if (!testRegexp.test(userName) || /--/.test(userName))\n        return {\n            isValid: false,\n            error: errors.notAllowedCharacters,\n        };\n\n    return {isValid: true};\n};\n\nexport const isEmail = value => {\n    return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\n};\n\nexport const isRequired = value => {\n    return !(value === null || value === undefined || value === '');\n};\n\nexport const noSpaces = value => {\n    return /^[\\S]*$/.test(value);\n};\n\nexport const isValidStackName = value => {\n    return /^[^\\/]/.test(value) && /^[a-zA-Z0-9\\/_]+$/.test(value);\n};\n\nexport const isValidEmail = mail => {\n    const errors = {invalidEmailAddress: 'invalidEmailAddress'};\n\n    if (!isEmail(mail))\n        return {\n            isValid: false,\n            error: errors.invalidEmailAddress,\n        };\n\n    return {isValid: true};\n};\n\nexport const isValidPassword = password => {\n    const errors = {mustNotBeEmpty: 'mustNotBeEmpty'};\n\n    if (password.length === 0)\n        return {\n            isValid: false,\n            error: errors.mustNotBeEmpty,\n        };\n\n    return {isValid: true};\n};"],"names":["isValidUserName","userName","errors","notAllowedCharacters","tooShort","tooLong","testRegexp","length","isValid","error","test","isEmail","value","isRequired","undefined","noSpaces","isValidStackName","isValidEmail","mail","invalidEmailAddress","isValidPassword","password","mustNotBeEmpty"],"mappings":"MAAaA,eAAe,GAAGC,QAAQ,IAAI;AACvC,QAAMC,MAAM,GAAG;AACXC,IAAAA,oBAAoB,EAAE,sBADX;AAEXC,IAAAA,QAAQ,EAAE,UAFC;AAGXC,IAAAA,OAAO,EAAE;AAHE,GAAf;AAMA,QAAMC,UAAU,GAAG,kBAAnB;AAEA,MAAIL,QAAQ,CAACM,MAAT,GAAkB,CAAtB,EACI,OAAO;AACHC,IAAAA,OAAO,EAAE,KADN;AAEHC,IAAAA,KAAK,EAAEP,MAAM,CAACE;AAFX,GAAP;AAKJ,MAAIH,QAAQ,CAACM,MAAT,GAAkB,EAAtB,EACI,OAAO;AACHC,IAAAA,OAAO,EAAE,KADN;AAEHC,IAAAA,KAAK,EAAEP,MAAM,CAACG;AAFX,GAAP;AAKJ,MAAI,CAACC,UAAU,CAACI,IAAX,CAAgBT,QAAhB,CAAD,IAA8B,KAAKS,IAAL,CAAUT,QAAV,CAAlC,EACI,OAAO;AACHO,IAAAA,OAAO,EAAE,KADN;AAEHC,IAAAA,KAAK,EAAEP,MAAM,CAACC;AAFX,GAAP;AAKJ,SAAO;AAACK,IAAAA,OAAO,EAAE;AAAV,GAAP;AACH;MAEYG,OAAO,GAAGC,KAAK,IAAI;AAC5B,SAAO,uEAAuEF,IAAvE,CAA4EE,KAA5E,CAAP;AACH;MAEYC,UAAU,GAAGD,KAAK,IAAI;AAC/B,SAAO,EAAEA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKE,SAA5B,IAAyCF,KAAK,KAAK,EAArD,CAAP;AACH;MAEYG,QAAQ,GAAGH,KAAK,IAAI;AAC7B,SAAO,UAAUF,IAAV,CAAeE,KAAf,CAAP;AACH;MAEYI,gBAAgB,GAAGJ,KAAK,IAAI;AACrC,SAAO,SAASF,IAAT,CAAcE,KAAd,KAAwB,oBAAoBF,IAApB,CAAyBE,KAAzB,CAA/B;AACH;MAEYK,YAAY,GAAGC,IAAI,IAAI;AAChC,QAAMhB,MAAM,GAAG;AAACiB,IAAAA,mBAAmB,EAAE;AAAtB,GAAf;AAEA,MAAI,CAACR,OAAO,CAACO,IAAD,CAAZ,EACI,OAAO;AACHV,IAAAA,OAAO,EAAE,KADN;AAEHC,IAAAA,KAAK,EAAEP,MAAM,CAACiB;AAFX,GAAP;AAKJ,SAAO;AAACX,IAAAA,OAAO,EAAE;AAAV,GAAP;AACH;MAEYY,eAAe,GAAGC,QAAQ,IAAI;AACvC,QAAMnB,MAAM,GAAG;AAACoB,IAAAA,cAAc,EAAE;AAAjB,GAAf;AAEA,MAAID,QAAQ,CAACd,MAAT,KAAoB,CAAxB,EACI,OAAO;AACHC,IAAAA,OAAO,EAAE,KADN;AAEHC,IAAAA,KAAK,EAAEP,MAAM,CAACoB;AAFX,GAAP;AAKJ,SAAO;AAACd,IAAAA,OAAO,EAAE;AAAV,GAAP;AACH;;;;"}